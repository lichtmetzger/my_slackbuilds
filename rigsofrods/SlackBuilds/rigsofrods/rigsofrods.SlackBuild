#!/bin/sh

# Slackware build script for MyGUI

# Copyright 2013  Widya Walesa <walecha99@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. FURTHERMORE I AM NOT LIABLE IF
# YOUR DATA IS DESTROYED, YOUR HOUSE BURNS DOWN OR YOUR DOG RUNS OFF.

PRGNAM=rigsofrods
VERSION="$( date +%Y%m%d )"
BUILD=1
TAG="_sm"

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
WRK=${WRK:-/tmp/txz}
PKG=$WRK/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -pipe -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -pipe -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -m64 -pipe -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $WRK $PKG $OUTPUT
cd $WRK
rm -rf ${PRGNAM}-${VERSION}
git clone https://github.com/RigsOfRods/rigs-of-rods.git ${PRGNAM}-${VERSION} --depth 1
cd ${PRGNAM}-${VERSION}
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

#Make GCC C++11 compatible to work around all compilation errors
  cmake \
    -DCMAKE_CXX_FLAGS:STRING=-std=gnu++11 \
    -DROR_USE_MYGUI="TRUE" \
    -DROR_USE_OPENAL="TRUE" \
    -DROR_USE_SOCKETW="TRUE" \
    -DROR_USE_PAGED="TRUE" \
    -DROR_USE_CAELUM="TRUE" \
    -DROR_USE_ANGELSCRIPT="TRUE" .

  make -j4
cd -

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

#copy binaries  
mkdir -p $PKG/usr/games/rigsofrods
cp -r $WRK/${PRGNAM}-${VERSION}/bin/* $PKG/usr/games/rigsofrods/

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
#copy documentation
cp -r $WRK/${PRGNAM}-${VERSION}/doc/* $PKG/usr/doc/$PRGNAM-$VERSION/
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

#patch config to correct libpaths
if [ "$ARCH" = "x86_64" ]; then
sed -i '4 s/\/usr\/local\/lib\/OGRE\//\/usr\/lib64\/OGRE\//' $PKG/usr/games/rigsofrods/plugins.cfg
else
sed -i '4 s/\/usr\/local\/lib\/OGRE\//\/usr\/lib\/OGRE\//' $PKG/usr/games/rigsofrods/plugins.cfg
fi
sed -i '12 s/libCaelum.so/..\/libCaelum.so/' $PKG/usr/games/rigsofrods/plugins.cfg

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

#copy pixmaps
mkdir -p $PKG/usr/share/pixmaps
cp $CWD/desktop-entries/RoR.png $PKG/usr/share/pixmaps/RoR.png
cp $CWD/desktop-entries/RoRConfig.png $PKG/usr/share/pixmaps/RoRConfig.png
#copy application entries
mkdir -p $PKG/usr/share/applications
cp $CWD/desktop-entries/RoR.desktop $PKG/usr/share/applications/RoR.desktop
cp $CWD/desktop-entries/RoRConfig.desktop $PKG/usr/share/applications/RoRConfig.desktop

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

echo "Cleaning up build directory"
cd $WRK; rm -rf ${PRGNAM}_${VERSION} $PKG
